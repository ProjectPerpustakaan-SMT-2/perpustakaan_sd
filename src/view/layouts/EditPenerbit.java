/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.layouts;

import javax.swing.BorderFactory;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import jakarta.validation.ConstraintViolation;

import entity.Penerbit;
import java.util.Set;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import util.ValidasiUtil;
import repository.Repository;
import repository.PenerbitRepository;
import view.popup.PopupViewHapusData;

/**
 *
 * @author Hafidz Fadhillah
 */
public class EditPenerbit extends javax.swing.JInternalFrame {
    private Penerbit penerbit;
    private Repository<Penerbit> pnbtRepo = new PenerbitRepository();
    
    /**
     * Creates new form TambahBuku
     */
    public EditPenerbit(Penerbit penerbit) {
        initComponents();
        this.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI BUI = (BasicInternalFrameUI) this.getUI();
        BUI.setNorthPane(null);
        
        this.penerbit = penerbit;
        
        fillForm();
        
        jam();
        customJDateChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tJam = new javax.swing.JLabel();
        tPenerbit = new javax.swing.JTextField();
        tKota = new javax.swing.JTextField();
        btnHapus = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JLabel();
        tKalender = new com.toedter.calendar.JDateChooser();
        background = new javax.swing.JLabel();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        tJam.setFont(new java.awt.Font("Calisto MT", 1, 20)); // NOI18N
        getContentPane().add(tJam);
        tJam.setBounds(670, 8, 110, 40);

        tPenerbit.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tPenerbit.setBorder(null);
        getContentPane().add(tPenerbit);
        tPenerbit.setBounds(474, 195, 770, 35);

        tKota.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tKota.setBorder(null);
        getContentPane().add(tKota);
        tKota.setBounds(474, 276, 770, 35);

        btnHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHapusMouseClicked(evt);
            }
        });
        getContentPane().add(btnHapus);
        btnHapus.setBounds(470, 423, 139, 40);

        btnSimpan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSimpan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSimpanMouseClicked(evt);
            }
        });
        getContentPane().add(btnSimpan);
        btnSimpan.setBounds(1110, 423, 139, 40);

        tKalender.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        getContentPane().add(tKalender);
        tKalender.setBounds(474, 356, 770, 36);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/layouts/Edit Penerbit.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1366, 768);

        setBounds(0, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSimpanMouseClicked
        // TODO add your handling code here:
        penerbit.setPenerbit(tPenerbit.getText());
        penerbit.setKota_penerbit(tKota.getText());
        penerbit.setTahun_terbit(tKalender.getDate());
        
        Set<ConstraintViolation<Penerbit>> vols = ValidasiUtil.validate(penerbit);
        
        if (vols.size() > 0) {
            JOptionPane.showMessageDialog(this, ValidasiUtil.getErrorsAsString(vols, "\n"));
            return;
        } else {
            pnbtRepo.update(penerbit);
            
            DaftarPenerbit daftarPenerbit = new DaftarPenerbit();
            JDesktopPane desktopPane = getDesktopPane();
            desktopPane.add(daftarPenerbit);
            daftarPenerbit.setVisible(true);

            this.dispose();
        }
    }//GEN-LAST:event_btnSimpanMouseClicked

    private void btnHapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHapusMouseClicked
        // TODO add your handling code here:
        int clicked = JOptionPane.showOptionDialog(
            this, 
            "Apakah Anda yakin ?",
            "Konfirmasi", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE, 
            null, 
            new Object[]{"Ya", "Tidak"}, 
            "Tidak" 
        );
        
        if (clicked == JOptionPane.YES_OPTION) {
            pnbtRepo.delete(penerbit.getKode_penerbit());
            
            DaftarPenerbit daftarPenerbit = new DaftarPenerbit();
            JDesktopPane desktopPane = getDesktopPane();
            desktopPane.add(daftarPenerbit);
            daftarPenerbit.setVisible(true);

            this.dispose();
            
            new PopupViewHapusData().setVisible(true);
        }
    }//GEN-LAST:event_btnHapusMouseClicked

    private void fillForm() {
        tPenerbit.setText(penerbit.getPenerbit());
        tKota.setText(penerbit.getKota_penerbit());
        tKalender.setDate(penerbit.getTahun_tebit());
    }
    
    private void customJDateChooser() {
        tKalender.setDateFormatString("yyyy");
    }
    
    private void jam() {
        try {
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    String finalJam;
                    String noljam = "";
                    String nolmenit = "";
                    String noldetik = "";
                    Calendar dt = Calendar.getInstance();
                    
                    int jam = dt.get(Calendar.HOUR_OF_DAY);
                    int menit = dt.get(Calendar.MINUTE);
                    int detik = dt.get(Calendar.SECOND);
                    
                    if (jam < 10) {
                        noljam = "0";
                    }
                    
                    if (menit < 10) {
                        nolmenit = "0";
                    }
                    
                    if (detik < 10) {
                        noldetik = "0";
                    }
                    
                    String Sjam = noljam + Integer.toString(jam);
                    String Smenit = nolmenit + Integer.toString(menit);
                    String Sdetik = noldetik + Integer.toString(detik);
                    finalJam = Sjam + ":" + Smenit + ":" + Sdetik;
                    
                    tJam.setText(finalJam);
            }};
            new javax.swing.Timer(1000, taskPerformer).start();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnHapus;
    private javax.swing.JLabel btnSimpan;
    private javax.swing.JLabel tJam;
    private com.toedter.calendar.JDateChooser tKalender;
    private javax.swing.JTextField tKota;
    private javax.swing.JTextField tPenerbit;
    // End of variables declaration//GEN-END:variables
}
