/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.layouts;

import javax.swing.BorderFactory;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;

import customUI.TableCustom;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import static repository.Repository.conn;
import service.LaporanService;
import util.NumberFormatUtil;

/**
 *
 * @author Hafidz Fadhillah
 */
public class DaftarLaporan extends javax.swing.JInternalFrame {

    private String username;
    private int bulan;
    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

    /**
     * Creates new form TambahBuku
     */
    public DaftarLaporan() {
        initComponents();
        this.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI BUI = (BasicInternalFrameUI) this.getUI();
        BUI.setNorthPane(null);

        loadDataTable();

        jam();
        TableCustom.apply(jScrollPane2, TableCustom.TableType.DEFAULT);
    }

    public void setUsername(String username) {
        this.username = username;

        if (username != null) {
            username = username.trim();
            // Split the username into words
            String[] words = username.split("\\s+");
            // Get the first word
            String firstWord = words[0];
            // Capitalize the first letter of the first word
            String capitalizedFirstWord = firstWord.substring(0, 1).toUpperCase() + firstWord.substring(1);
            tUserLogin.setText("Selamat Datang " + capitalizedFirstWord + " !");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tJam = new javax.swing.JLabel();
        tUserLogin = new javax.swing.JLabel();
        btnCetak = new javax.swing.JLabel();
        tStatusData = new javax.swing.JComboBox<>();
        tBulan = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        tJam.setFont(new java.awt.Font("Calisto MT", 1, 20)); // NOI18N
        getContentPane().add(tJam);
        tJam.setBounds(670, 8, 110, 40);

        tUserLogin.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tUserLogin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(tUserLogin);
        tUserLogin.setBounds(1105, 15, 200, 23);

        btnCetak.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCetak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCetakMouseClicked(evt);
            }
        });
        getContentPane().add(btnCetak);
        btnCetak.setBounds(1157, 143, 173, 33);

        tStatusData.setBackground(new Color(0,0,0,0)
        );
        tStatusData.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tStatusData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Peminjaman", "Pengembalian", "Sanksi" }));
        tStatusData.setBorder(null);
        tStatusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tStatusDataActionPerformed(evt);
            }
        });
        getContentPane().add(tStatusData);
        tStatusData.setBounds(490, 145, 165, 31);

        tBulan.setBackground(new Color(0,0,0,0)
        );
        tBulan.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tBulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli ", "Agustus", "September", "Oktober", "November", "Desember" }));
        tBulan.setBorder(null);
        tBulan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBulanActionPerformed(evt);
            }
        });
        getContentPane().add(tBulan);
        tBulan.setBounds(743, 145, 145, 31);

        Tabel.setFont(new java.awt.Font("Calisto MT", 0, 14)); // NOI18N
        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Data", "Data", "Data"
            }
        ));
        Tabel.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(Tabel);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(437, 195, 890, 510);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/layouts/Laporan.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1366, 768);

        setBounds(0, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCetakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCetakMouseClicked
        // TODO add your handling code here:
        LaporanService service = new LaporanService(
                tStatusData.getSelectedItem().toString(),
                bulan,
                tBulan.getSelectedItem().toString()
        );

        service.generate();
    }//GEN-LAST:event_btnCetakMouseClicked

    private void tStatusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tStatusDataActionPerformed
        // TODO add your handling code here:
        loadDataTable();
    }//GEN-LAST:event_tStatusDataActionPerformed

    private void tBulanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBulanActionPerformed
        // TODO add your handling code here:
        if (tBulan.getSelectedItem().equals("Januari")) {
            bulan = 1;
        } else if (tBulan.getSelectedItem().equals("Februari")) {
            bulan = 2;
        } else if (tBulan.getSelectedItem().equals("Maret")) {
            bulan = 3;
        } else if (tBulan.getSelectedItem().equals("April")) {
            bulan = 4;
        } else if (tBulan.getSelectedItem().equals("Mei")) {
            bulan = 5;
        } else if (tBulan.getSelectedItem().equals("Juni")) {
            bulan = 6;
        } else if (tBulan.getSelectedItem().equals("Juli")) {
            bulan = 7;
        } else if (tBulan.getSelectedItem().equals("Agustus")) {
            bulan = 8;
        } else if (tBulan.getSelectedItem().equals("September")) {
            bulan = 9;
        } else if (tBulan.getSelectedItem().equals("Oktober")) {
            bulan = 10;
        } else if (tBulan.getSelectedItem().equals("November")) {
            bulan = 11;
        } else if (tBulan.getSelectedItem().equals("Desember")) {
            bulan = 12;
        }

        loadDataTable();
    }//GEN-LAST:event_tBulanActionPerformed

    private void loadDataTable() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Disable cell editing
            }
        };

        model.addColumn("ID");
        model.addColumn("Nama");
        model.addColumn("Kelas");
        model.addColumn("Tgl Pinjam");
        model.addColumn("Tgl Kembali");
        model.addColumn("Denda");
        model.addColumn("Buku");
        model.addColumn("Kondisi");

        String sql = null;

        if ((tBulan.getSelectedItem() != null) && (tStatusData.getSelectedItem().equals("Peminjaman"))) {
            sql = "SELECT transaksi.*, detail_transaksi.*, buku.*, kerusakan.* FROM transaksi "
                    + "INNER JOIN detail_transaksi ON detail_transaksi.kode_transaksi = transaksi.kode_transaksi "
                    + "INNER JOIN buku ON detail_transaksi.kode_buku = buku.kode_buku "
                    + "INNER JOIN kerusakan ON detail_transaksi.kode_kerusakan = kerusakan.kode_kerusakan "
                    + "WHERE transaksi.status = 'dipinjam' AND MONTH(detail_transaksi.tgl_pinjam) = " + bulan + "";
        } else if ((tBulan.getSelectedItem() != null) && (tStatusData.getSelectedItem().equals("Pengembalian"))) {
            sql = "SELECT transaksi.*, detail_transaksi.*, buku.*, kerusakan.* FROM transaksi "
                    + "INNER JOIN detail_transaksi ON detail_transaksi.kode_transaksi = transaksi.kode_transaksi "
                    + "INNER JOIN buku ON detail_transaksi.kode_buku = buku.kode_buku "
                    + "INNER JOIN kerusakan ON detail_transaksi.kode_kerusakan = kerusakan.kode_kerusakan "
                    + "WHERE transaksi.status = 'dikembalikan' AND MONTH(detail_transaksi.tgl_kembali) = " + bulan + "";
        } else if ((tBulan.getSelectedItem() != null) && (tStatusData.getSelectedItem().equals("Sanksi"))) {
            sql = "SELECT transaksi.*, detail_transaksi.*, buku.*, kerusakan.* FROM transaksi "
                    + "INNER JOIN detail_transaksi ON detail_transaksi.kode_transaksi = transaksi.kode_transaksi "
                    + "INNER JOIN buku ON detail_transaksi.kode_buku = buku.kode_buku "
                    + "INNER JOIN kerusakan ON detail_transaksi.kode_kerusakan = kerusakan.kode_kerusakan "
                    + "WHERE detail_transaksi.kode_kerusakan IN (2,3,4) AND MONTH(detail_transaksi.tgl_kembali) = " + bulan + "";
        }

        try (PreparedStatement statement = conn.prepareStatement(sql)) {
            ResultSet results = statement.executeQuery();

            while (results.next()) {
                model.addRow(new Object[]{
                    results.getString("transaksi.kode_transaksi"),
                    results.getString("transaksi.nama_peminjam"),
                    results.getString("transaksi.kelas"),
                    sdf.format(results.getDate("detail_transaksi.tgl_pinjam")),
                    sdf.format(results.getDate("detail_transaksi.tgl_kembali")),
                    "Rp. " + NumberFormatUtil.formatDec(results.getInt("detail_transaksi.nominal_denda")),
                    results.getString("buku.judul_buku"),
                    results.getString("kerusakan.jenis_kerusakan")
                });
            }

            Tabel.setModel(model);
            customStyleTable();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void customStyleTable() {
        Tabel.getColumnModel().getColumn(0).setMaxWidth(40);
    }

    private void jam() {
        try {
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    String finalJam;
                    String noljam = "";
                    String nolmenit = "";
                    String noldetik = "";
                    Calendar dt = Calendar.getInstance();

                    int jam = dt.get(Calendar.HOUR_OF_DAY);
                    int menit = dt.get(Calendar.MINUTE);
                    int detik = dt.get(Calendar.SECOND);

                    if (jam < 10) {
                        noljam = "0";
                    }

                    if (menit < 10) {
                        nolmenit = "0";
                    }

                    if (detik < 10) {
                        noldetik = "0";
                    }

                    String Sjam = noljam + Integer.toString(jam);
                    String Smenit = nolmenit + Integer.toString(menit);
                    String Sdetik = noldetik + Integer.toString(detik);
                    finalJam = Sjam + ":" + Smenit + ":" + Sdetik;

                    tJam.setText(finalJam);
                }
            };
            new javax.swing.Timer(1000, taskPerformer).start();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel;
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnCetak;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> tBulan;
    private javax.swing.JLabel tJam;
    private javax.swing.JComboBox<String> tStatusData;
    private javax.swing.JLabel tUserLogin;
    // End of variables declaration//GEN-END:variables
}
