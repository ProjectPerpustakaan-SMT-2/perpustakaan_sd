/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view.layouts;

import javax.swing.BorderFactory;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

import entity.Sanksi;
import repository.Repository;
import repository.SanksiRepository;
import customUI.TableCustom;

import util.ViewUtil;

/**
 *
 * @author Hafidz Fadhillah
 */
public class DaftarSanksi extends javax.swing.JInternalFrame {
    private String username;
    
    private Repository<Sanksi> snkRepo = new SanksiRepository();
    
    /**
     * Creates new form TambahBuku
     */
    public DaftarSanksi() {
        initComponents();
        this.setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI BUI = (BasicInternalFrameUI) this.getUI();
        BUI.setNorthPane(null);
        
        jam();
        loadDataTable(snkRepo.get());
        TableCustom.apply(jScrollPane2, TableCustom.TableType.DEFAULT);
    }
    
    public void setUsername(String username) {
        this.username = username;
        String result = username.substring(0, 1).toUpperCase() + username.substring(1);
        tUserLogin.setText("Selamat Datang " + result + " !");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tJam = new javax.swing.JLabel();
        tUserLogin = new javax.swing.JLabel();
        btnTambahData = new javax.swing.JLabel();
        tCari = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(null);

        tJam.setFont(new java.awt.Font("Calisto MT", 1, 20)); // NOI18N
        getContentPane().add(tJam);
        tJam.setBounds(670, 8, 110, 40);

        tUserLogin.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tUserLogin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(tUserLogin);
        tUserLogin.setBounds(1105, 15, 200, 23);

        btnTambahData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambahData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTambahDataMouseClicked(evt);
            }
        });
        getContentPane().add(btnTambahData);
        btnTambahData.setBounds(430, 150, 155, 30);

        tCari.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        tCari.setBorder(null);
        tCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tCariKeyReleased(evt);
            }
        });
        getContentPane().add(tCari);
        tCari.setBounds(1049, 145, 240, 40);

        Tabel.setFont(new java.awt.Font("Calisto MT", 0, 14)); // NOI18N
        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Data", "Data", "Data"
            }
        ));
        Tabel.getTableHeader().setReorderingAllowed(false);
        Tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Tabel);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(437, 210, 890, 495);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/layouts/Daftar Sanksi.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1366, 768);

        setBounds(0, 0, 1366, 768);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTambahDataMouseClicked
        // TODO add your handling code here:
        TambahSanksi tambahSanksi = new TambahSanksi();
        tambahSanksi.setUsername(username);
        JDesktopPane desktopPane = getDesktopPane();
        desktopPane.add(tambahSanksi);
        tambahSanksi.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_btnTambahDataMouseClicked

    private void tCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCariKeyReleased
        // TODO add your handling code here:
        String value = tCari.getText();
        List<Sanksi> sanksis = snkRepo.search(new HashMap<>() {{
            put("jenis_kerusakan", value);
            put("jumlah_denda", value);
        }});
        
        loadDataTable(sanksis);
    }//GEN-LAST:event_tCariKeyReleased

    private void TabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMouseClicked
        // TODO add your handling code here:
        int row = Tabel.getSelectedRow();
        String value = Tabel.getModel().getValueAt(row, 4).toString();
        Sanksi sanksi = snkRepo.get(Integer.valueOf(value));
        
        EditSanksi editSanksi = new EditSanksi(sanksi);
        editSanksi.setUsername(username);
        JDesktopPane desktopPane = getDesktopPane();
        desktopPane.add(editSanksi);
        editSanksi.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_TabelMouseClicked

    private void loadDataTable(List<Sanksi> sanksis) {
        int no = 1;
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Disable cell editing
            }
        };
        
        model.addColumn("No");
        model.addColumn("Nama Sanksi");
        model.addColumn("Deskripsi");
        model.addColumn("Nominal Denda");
        model.addColumn("ID");
        
        for (Sanksi sanksi: sanksis) {
            
            model.addRow(new Object[] {
                no++,
                sanksi.getJenis_kerusakan(),
                sanksi.getDeskripsi_sanksi(),
                sanksi.getJumlah_denda(),
                sanksi.getKode_sanksi()
            });
        }
        
        Tabel.setModel(model);
        ViewUtil.hideTableColumn(Tabel, 4);
        customStyleTable();
    }
    
    private void customStyleTable() {        
        Tabel.getColumnModel().getColumn(0).setMaxWidth(40);
    }
    
    private void jam() {
        try {
            ActionListener taskPerformer = new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    String finalJam;
                    String noljam = "";
                    String nolmenit = "";
                    String noldetik = "";
                    Calendar dt = Calendar.getInstance();
                    
                    int jam = dt.get(Calendar.HOUR_OF_DAY);
                    int menit = dt.get(Calendar.MINUTE);
                    int detik = dt.get(Calendar.SECOND);
                    
                    if (jam < 10) {
                        noljam = "0";
                    }
                    
                    if (menit < 10) {
                        nolmenit = "0";
                    }
                    
                    if (detik < 10) {
                        noldetik = "0";
                    }
                    
                    String Sjam = noljam + Integer.toString(jam);
                    String Smenit = nolmenit + Integer.toString(menit);
                    String Sdetik = noldetik + Integer.toString(detik);
                    finalJam = Sjam + ":" + Smenit + ":" + Sdetik;
                    
                    tJam.setText(finalJam);
            }};
            new javax.swing.Timer(1000, taskPerformer).start();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel;
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnTambahData;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tCari;
    private javax.swing.JLabel tJam;
    private javax.swing.JLabel tUserLogin;
    // End of variables declaration//GEN-END:variables
}
